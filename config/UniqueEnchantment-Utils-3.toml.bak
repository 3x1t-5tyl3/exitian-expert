
[general]

	[general.utils]

		[general.utils.sleipnirs_grace]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 3
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "UNCOMMON"
			#If the Enchantment is a Treasure
			treasure = true
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 20
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 3
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 0
			#Enchantments that are not compatible with this Enchantment
			incompats = []
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100
			#Range: 0.0 ~ 1.7976931348623157E308
			cap = 100.0
			#Range: 0.0 ~ 1.7976931348623157E308
			speed_gain = 1.0
			#Range: 0.0 ~ 1.7976931348623157E308
			max = 100.0
			#Range: 0.0 ~ 1.7976931348623157E308
			path_bonus = 5.0

		[general.utils.famines_odium]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 1
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "UNCOMMON"
			#If the Enchantment is a Treasure
			treasure = false
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 10
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 4
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 40
			#Enchantments that are not compatible with this Enchantment
			incompats = []
			#Range: > 0
			delay = 1200
			#Range: 0.0 ~ 1.7976931348623157E308
			nurishment = 0.0062500000931322575
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100
			#Range: 0.0 ~ 1.7976931348623157E308
			damage = 0.0062500000931322575

		[general.utils.thick_pick]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 2
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "RARE"
			#If the Enchantment is a Treasure
			treasure = false
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 26
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 4
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 75
			#Enchantments that are not compatible with this Enchantment
			incompats = []
			#Range: 0.0 ~ 1.7976931348623157E308
			speed_base = 2.25
			#Range: 0.0 ~ 1.7976931348623157E308
			speed_level = 1.25
			items = ["minecraft:diamond;5"]
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100

		[general.utils.rocketman]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 3
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "VERY_RARE"
			#If the Enchantment is a Treasure
			treasure = false
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 25
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 4
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 20
			#Enchantments that are not compatible with this Enchantment
			incompats = []
			#Range: 0.0 ~ 1.7976931348623157E308
			duration_base = 0.05
			#Range: 0.0 ~ 1.7976931348623157E308
			duration_level = 0.15
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100

		[general.utils.climber]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 3
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "COMMON"
			#If the Enchantment is a Treasure
			treasure = true
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 14
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 8
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 30
			#Enchantments that are not compatible with this Enchantment
			incompats = ["uniquee:swift"]
			climb_speed = ["minecraft:ladder;0.1", "minecraft:vine;0.25", "minecraft:scaffolding;0.25"]
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100
			#Range: > 0
			min_delay = 10

		[general.utils.phanes_regret]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 1
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "UNCOMMON"
			#If the Enchantment is a Treasure
			treasure = true
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 10
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 2
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 75
			#Enchantments that are not compatible with this Enchantment
			incompats = []
			#Range: 0.0 ~ 1.7976931348623157E308
			chance = 0.125
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100

		[general.utils.poseidons_soul]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 3
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "RARE"
			#If the Enchantment is a Treasure
			treasure = true
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 24
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 4
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 75
			#Enchantments that are not compatible with this Enchantment
			incompats = []
			#Range: > 0
			base_consumtion = 16
			#If the Enchantment is Tradeable by Villagers
			tradeable = false
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 40

		[general.utils.mounting_aegis]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 1
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "RARE"
			#If the Enchantment is a Treasure
			treasure = true
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 24
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 4
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 20
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100
			#Enchantments that are not compatible with this Enchantment
			incompats = []

		[general.utils.demeters_blessing]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 2
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "VERY_RARE"
			#If the Enchantment is a Treasure
			treasure = false
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 12
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 8
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 75
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100
			#Enchantments that are not compatible with this Enchantment
			incompats = ["uniqueutil:demeters_soul"]

		[general.utils.ambrosia]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 4
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "RARE"
			#If the Enchantment is a Treasure
			treasure = true
			#If the Enchantment is Tradeable by Villagers
			tradeable = true
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 8
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 12
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 10
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100
			#Enchantments that are not compatible with this Enchantment
			incompats = []

		[general.utils.essence_of_slime]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 5
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "VERY_RARE"
			#If the Enchantment is a Treasure
			treasure = true
			#If the Enchantment is Tradeable by Villagers
			tradeable = false
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 15
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 5
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 10
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100
			#Enchantments that are not compatible with this Enchantment
			incompats = []
			#Range: 0.0 ~ 1.7976931348623157E308
			durability_loss = 3.0

	[general.base]

		[general.base.demeters_soul]
			#If the Enchantment is Obtainable
			enabled = true
			#If the Enchantment has any effect
			activated = true
			#Minimum Enchantment Level
			#Range: > 0
			min_level = 1
			#Maximum Enchantment Level
			#Range: > 0
			max_level = 3
			#Rarity of the Enchantment
			#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
			rarity = "VERY_RARE"
			#If the Enchantment is a Treasure
			treasure = true
			#If the Enchantment is Tradeable by Villagers
			tradeable = false
			#Minimum Level for Enchanting
			#Range: > 0
			base_cost = 20
			#Increase of levels per Enchantment Level
			#Range: > 0
			per_level_cost = 10
			#The Additional Upper Range of Required Levels
			#Range: > 0
			cost_limit = 40
			#Hard Limit of where the Enchantment will be capped even if the level is higher
			#Range: > 0
			hard_cap = 100
			#Enchantments that are not compatible with this Enchantment
			incompats = []
			#Range: > 0
			delay = 20
			#Range: 0.0 ~ 1.7976931348623157E308
			base_cap = 0.9
			#Range: > 0
			crop_cap_base = 25
			#Range: > 0
			crop_cap_level = 10

